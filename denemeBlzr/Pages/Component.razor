@page "/Component"
@using denemeBlzr.Pages
@using Microsoft.EntityFrameworkCore
@inject HttpClient Http
@inject ApplicationDbContext DbContext


<PageTitle>Stoklar Kayıt</PageTitle>

<h1>Stoklar Kayıt</h1>


<p>This component demonstrates fetching data from the server and adding new stock items.</p>

@if (Stoks == null)
{
    <p><em>Loading...</em></p>
}
else if (Stoks.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Durum</th>
                <th>Stok Kodu</th>
                <th>Stok Adı</th>
                <th>Birim</th>
                <th>Model</th>
                <th>Stok Grubu</th>
                <th>Marka</th>
                <th>Alış KDV</th>
                <th>Satış KDV</th>
                <th>Alış Fiyatı 1</th>
                <th>Alış Fiyatı 2</th>
                <th>Alış Fiyatı 3</th>
                <th>Satış Fiyatı 1</th>
                <th>Satış Fiyatı 2</th>
                <th>Satış Fiyatı 3</th>
                <th>Açıklama</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stok in Stoks)
            {
                <tr>
                    <td>@stok.Id</td>
                    <td>@stok.Durum</td>
                    <td>@stok.StokKodu</td>
                    <td>@stok.StokAdi</td>
                    <td>@stok.Birimi</td>
                    <td>@stok.Modeli</td>
                    <td>@stok.StokGrubu</td>
                    <td>@stok.Marka</td>
                    <td>@stok.AlisKdv</td>
                    <td>@stok.SatisKdv</td>
                    <td>@stok.AlisFiyati1</td>
                    <td>@stok.AlisFiyati2</td>
                    <td>@stok.AlisFiyati3</td>
                    <td>@stok.SatisFiyati1</td>
                    <td>@stok.SatisFiyati2</td>
                    <td>@stok.SatisFiyati3</td>
                    <td>@stok.Aciklama</td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Add New Stock</h2>
    <EditForm Model="@newStock" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Stok Kodu:</label>
            <InputText @bind-Value="newStock.StokKodu" />
        </div>
        <div>
            <label>Stok Adı:</label>
            <InputText @bind-Value="newStock.StokAdi" />
        </div>
        <!-- Add other fields similarly -->

        <button type="submit">Add Stock</button>
    </EditForm>
}

@code {
    private List<Stok>? Stoks;
    private Stok newStock = new Stok();

    protected override async Task OnInitializedAsync()
    {
        await LoadStoksAsync();
    }

    private async Task LoadStoksAsync()
    {
        Stoks = await DbContext.Stoks.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Stoks.Add(newStock);
        await DbContext.SaveChangesAsync();
        await LoadStoksAsync(); // Refresh the list
        newStock = new Stok(); // Clear the form
    }
}
